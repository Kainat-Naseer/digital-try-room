[{"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\index.js":"1","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\App.js":"2","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\reportWebVitals.js":"4","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\login.js":"5","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\SignUp.js":"6","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\ForgetPassword.js":"7","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\Home.js":"8","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\instructions\\FirstStepIntructions.js":"9","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\imageCapture\\FirstImageCapture.js":"10","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\instructions\\SecondStepIntructions.js":"11","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\imageCapture\\SecondImageCapture.js":"12","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\components\\nav.js":"13","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\Measurements.js":"14"},{"size":908,"mtime":1611947858237,"results":"15","hashOfConfig":"16"},{"size":1201,"mtime":1616349070168,"results":"17","hashOfConfig":"16"},{"size":5201,"mtime":1611947858241,"results":"18","hashOfConfig":"16"},{"size":377,"mtime":1611947858239,"results":"19","hashOfConfig":"16"},{"size":2069,"mtime":1619693226943,"results":"20","hashOfConfig":"16"},{"size":2183,"mtime":1619693290226,"results":"21","hashOfConfig":"16"},{"size":1428,"mtime":1619693202424,"results":"22","hashOfConfig":"16"},{"size":834,"mtime":1619695977950,"results":"23","hashOfConfig":"16"},{"size":395,"mtime":1619898488658,"results":"24","hashOfConfig":"16"},{"size":3764,"mtime":1619902090632,"results":"25","hashOfConfig":"16"},{"size":400,"mtime":1619899209557,"results":"26","hashOfConfig":"16"},{"size":3759,"mtime":1619902266758,"results":"27","hashOfConfig":"16"},{"size":431,"mtime":1619695562840,"results":"28","hashOfConfig":"16"},{"size":923,"mtime":1619696773375,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1bflvez",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\index.js",[],["64","65"],"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\App.js",["66","67"],"// 1. Install dependencies\r\n// 2. Import dependencies\r\n// 3. Setup webcam and canvas\r\n// 4. Define references to those\r\n// 5. Load handpose\r\n// 6. Detect function\r\n// 7. Draw using drawMask\r\n\r\nimport React, { useRef } from \"react\";\r\n// import logo from './logo.svg';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Login from './pages/login';\r\nimport Home from './pages/Home';\r\nimport SignUp from './pages/SignUp';\r\nimport ForgetPassword from './pages/ForgetPassword';\r\nimport \"./App.css\";\r\nimport 'react-material-iconic-font';\r\nimport \"react-fontawesome\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Router>\r\n        <Switch>\r\n\r\n          <Route path=\"/\" exact>\r\n            <Login/>\r\n          </Route>\r\n\r\n          <Route path=\"/log-in\">\r\n            <Login />\r\n          </Route>\r\n\r\n          <Route path=\"/sign-up\">\r\n            <SignUp />\r\n          </Route>\r\n\r\n          <Route path=\"/forget-password\">\r\n            <ForgetPassword />\r\n          </Route>\r\n\r\n          <Route path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\reportWebVitals.js",[],"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\login.js",["68","69","70","71","72","73"],"import React, { useState } from \"react\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Home from './Home';\r\n\r\nconst Login = () => {\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div className=\"limiter\">\r\n      <div className=\"container-login100\" style={{ backgroundImage: `url(${require(\"../../src/images/bg-01.jpg\")})` }}>\r\n        <div className=\"wrap-login100\">\r\n          <form className=\"login100-form validate-form\">\r\n            {/* <span className=\"login100-form-logo\"> */}\r\n            <div className=\"logo\">\r\n\r\n            </div>\r\n            {/* </span> */}\r\n\r\n            <span className=\"login100-form-title p-b-34 p-t-27\">\r\n              Log in\r\n\t\t\t\t\t</span>\r\n\r\n            <div className=\"wrap-input100 validate-input\" data-validate=\"Enter username\">\r\n              <input className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username\" />\r\n            </div>\r\n\r\n            <div className=\"wrap-input100 validate-input\" data-validate=\"Enter password\">\r\n              <input className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"Password\" />\r\n            </div>\r\n\r\n            <div className=\"contact100-form-checkbox\">\r\n              <input className=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\" />\r\n              <Link to=\"/forget-password\" className=\"forget-password-description\">\r\n                Forgot Password?\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"container-login100-form-btn\">\r\n              <Link to=\"/home\">\r\n                <button className=\"login100-form-btn forms-button\">\r\n                  Login\r\n              </button>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"text-center new-to-description p-t-90\">\r\n              New to Digital Try Room?\r\n              <Link to=\"/sign-up\" className=\"sign-up-link\">\r\n                Sign up\r\n\t\t\t\t\t\t  </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\SignUp.js",["74","75","76","77"],"import React, { useState } from \"react\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n\r\n  return (\r\n    <div className=\"limiter\">\r\n      <div className=\"container-login100\" style={{ backgroundImage: `url(${require(\"../../src/images/bg-01.jpg\")})` }}>\r\n        <div className=\"wrap-login100\">\r\n          <form className=\"login100-form validate-form\">\r\n            {/* <span className=\"login100-form-logo\"> */}\r\n            <div className=\"logo\">\r\n\r\n            </div>\r\n            {/* </span> */}\r\n\r\n            <span className=\"login100-form-title p-b-34 p-t-27\">\r\n              Sign Up\r\n\t\t\t\t\t</span>\r\n\r\n            <div className=\"wrap-input100 validate-input\" data-validate=\"Enter username\">\r\n              <input className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username\" />\r\n            </div>\r\n\r\n            <div className=\"wrap-input100 validate-input\" data-validate=\"Enter email\">\r\n              <input className=\"input100\" type=\"password\" name=\"email\" placeholder=\"Email\" />\r\n            </div>\r\n\r\n            <div className=\"wrap-input100 validate-input\" data-validate=\"Enter password\">\r\n              <input className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"Password\" />\r\n            </div>\r\n\r\n            <div className=\"wrap-input100 validate-input\" data-validate=\"Enter password\">\r\n              <input className=\"input100\" type=\"password\" name=\"passAxgain\" placeholder=\"Confirm Password\" />\r\n            </div>\r\n\r\n            <div className=\"contact100-form-checkbox\">\r\n              <input className=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\" />\r\n              <label className=\"already-have-an-account-description\">\r\n                Already have an account?\r\n\t\t\t\t\t\t</label>\r\n              <Link to=\"/log-in\" className=\"login\">Log In</Link>\r\n            </div>\r\n\r\n            <div className=\"container-login100-form-btn\">\r\n              <button className=\"login100-form-btn forms-button\">\r\n                Sign Up\r\n\t\t\t\t\t\t</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\ForgetPassword.js",["78","79","80","81","82"],"import React, { useState } from \"react\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst ForgetPassword = (props) => {\r\n\r\n  return (\r\n    <div className=\"limiter\">\r\n      <div className=\"container-login100\" style={{ backgroundImage: `url(${require(\"../../src/images/bg-01.jpg\")})` }}>\r\n        <div className=\"wrap-login100\">\r\n          <form className=\"login100-form validate-form\">\r\n\r\n            <span className=\"login100-form-title reset-paswword-title p-b-34 p-t-27\">\r\n              Reset The Password\r\n        </span>\r\n\r\n            <div className=\"wrap-input100 validate-input\" data-validate=\"Enter your registered Email\">\r\n              <input className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Enter your registered Email\" />\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"container-login100-form-btn forget-password-button\">\r\n                <button className=\"login100-form-btn forms-button\">\r\n                  Back\r\n                </button>\r\n              </div>\r\n\r\n\r\n              <div className=\"container-login100-form-btn forget-password-button\">\r\n                <button className=\"login100-form-btn forms-button\">\r\n                  Send Email\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgetPassword;","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\Home.js",[],"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\instructions\\FirstStepIntructions.js",["83"],"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\imageCapture\\FirstImageCapture.js",["84","85","86"],"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\instructions\\SecondStepIntructions.js",["87"],"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\imageCapture\\SecondImageCapture.js",["88","89","90"],"import React, { useRef, useCallback, useState } from \"react\"\r\nimport Webcam from \"react-webcam\";\r\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\r\n\r\nimport helperImage from '../../images/helper1.jpg';\r\n\r\nconst videoConstraints = {\r\n  facingMode: \"user\"\r\n};\r\n\r\nconst SecondImageCapture = (props) => {\r\n  const [isResult, setIsResult] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [tempImage, setTempImage] = useState('');\r\n  const [canvasShow, setCanvasShow] = useState(false);\r\n  const [isImageUpload, setIsImageUpload] = useState(false);\r\n  const webcamRef = useRef(null);\r\n  // const canvasRef = useRef(null);\r\n\r\n  var imageSrc;\r\n\r\n  const runBodySegment = async () => {\r\n    setIsResult(true);\r\n    setIsLoading(true);\r\n    const net = await bodyPix.load();\r\n    console.log(\"BodyPix model loaded.\");\r\n    //  Loop and detect hands\r\n    var image = document.getElementById(\"temp-image\");\r\n\r\n    const segmentation = await net.segmentPersonParts(image, {\r\n      flipHorizontal: false,\r\n      internalResolution: 'medium',\r\n      segmentationThreshold: 0.7\r\n    });\r\n    console.log(segmentation);\r\n\r\n    setCanvasShow(true);\r\n    imageUploadSuccess();\r\n    const coloredPartImage = bodyPix.toColoredPartMask(segmentation);\r\n    const opacity = 0.7;\r\n    const flipHorizontal = false;\r\n    const maskBlurAmount = 0;\r\n    const canvas = document.getElementById('canvas-two');\r\n    // Draw the colored part image on top of the original image onto a canvas.\r\n    // The colored part image will be drawn semi-transparent, with an opacity of\r\n    // 0.7, allowing for the original image to be visible under.\r\n    bodyPix.drawMask(\r\n      canvas, image, coloredPartImage, opacity, maskBlurAmount,\r\n      flipHorizontal);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const imageUploadSuccess = () => {\r\n    setTimeout(() => { setIsImageUpload(true) }, 3000);\r\n    setIsImageUpload(false);\r\n  }\r\n\r\n\r\n  const capture = useCallback(\r\n    () => {\r\n      imageSrc = webcamRef.current.getScreenshot();\r\n      console.log(\"debugging\", imageSrc)\r\n      setTempImage(imageSrc);\r\n    },\r\n    [webcamRef]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <div>\r\n        <div className=\"loader\"></div>\r\n        <p>Please wait for processing..</p>\r\n      </div>\r\n      }\r\n\r\n      {isResult === false ? (\r\n        <>\r\n          <div className=\"parent\">\r\n            <div id=\"guide-image\" className=\"child1\">\r\n              <img src={helperImage} />\r\n            </div>\r\n\r\n            <div className=\"child2\">\r\n              <Webcam\r\n                audio={false}\r\n                ref={webcamRef}\r\n                id=\"webcam-preview\"\r\n                screenshotFormat=\"image/jpeg\"\r\n                videoConstraints={videoConstraints}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className=\"button-hover capture-buttons\" onClick={() => { capture(); runBodySegment(); }}>Capture photo</button>\r\n        </>\r\n      ) : (\r\n          canvasShow &&\r\n          <>\r\n            {!isImageUpload &&\r\n              <div>upload successful</div>}\r\n            <canvas\r\n              id=\"canvas-two\"\r\n              style={{\r\n                position: \"absolute\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                left: 0,\r\n                right: 0,\r\n                textAlign: \"center\",\r\n                zindex: 9,\r\n                width: 640,\r\n                height: 480,\r\n              }}\r\n            />\r\n            <button className=\"next-button-image-capture button-hover\" onClick={props.nextStep}>Next Step</button>\r\n          </>\r\n        )}\r\n\r\n      <img id=\"temp-image\" src={tempImage} style={{ display: \"none\" }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SecondImageCapture;","C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\components\\nav.js",[],"C:\\Users\\UsmanFayyaz\\React apps\\digital-try-room\\src\\pages\\Measurements.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":9,"column":17,"nodeType":"97","messageId":"98","endLine":9,"endColumn":23},{"ruleId":"95","severity":1,"message":"99","line":15,"column":3,"nodeType":"97","messageId":"98","endLine":15,"endColumn":7},{"ruleId":"95","severity":1,"message":"100","line":3,"column":20,"nodeType":"97","messageId":"98","endLine":3,"endColumn":26},{"ruleId":"95","severity":1,"message":"101","line":4,"column":3,"nodeType":"97","messageId":"98","endLine":4,"endColumn":9},{"ruleId":"95","severity":1,"message":"102","line":5,"column":3,"nodeType":"97","messageId":"98","endLine":5,"endColumn":8},{"ruleId":"95","severity":1,"message":"103","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":12},{"ruleId":"95","severity":1,"message":"104","line":12,"column":10,"nodeType":"97","messageId":"98","endLine":12,"endColumn":15},{"ruleId":"95","severity":1,"message":"105","line":12,"column":17,"nodeType":"97","messageId":"98","endLine":12,"endColumn":25},{"ruleId":"95","severity":1,"message":"106","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":3,"column":20,"nodeType":"97","messageId":"98","endLine":3,"endColumn":26},{"ruleId":"95","severity":1,"message":"101","line":4,"column":3,"nodeType":"97","messageId":"98","endLine":4,"endColumn":9},{"ruleId":"95","severity":1,"message":"102","line":5,"column":3,"nodeType":"97","messageId":"98","endLine":5,"endColumn":8},{"ruleId":"95","severity":1,"message":"106","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":3,"column":20,"nodeType":"97","messageId":"98","endLine":3,"endColumn":26},{"ruleId":"95","severity":1,"message":"101","line":4,"column":3,"nodeType":"97","messageId":"98","endLine":4,"endColumn":9},{"ruleId":"95","severity":1,"message":"102","line":5,"column":3,"nodeType":"97","messageId":"98","endLine":5,"endColumn":8},{"ruleId":"95","severity":1,"message":"99","line":6,"column":3,"nodeType":"97","messageId":"98","endLine":6,"endColumn":7},{"ruleId":"107","severity":1,"message":"108","line":8,"column":7,"nodeType":"109","endLine":8,"endColumn":53},{"ruleId":"110","severity":1,"message":"111","line":60,"column":18,"nodeType":"112","endLine":60,"endColumn":51},{"ruleId":"107","severity":1,"message":"108","line":80,"column":15,"nodeType":"109","endLine":80,"endColumn":40},{"ruleId":"107","severity":1,"message":"108","line":118,"column":7,"nodeType":"109","endLine":118,"endColumn":74},{"ruleId":"107","severity":1,"message":"108","line":8,"column":7,"nodeType":"109","endLine":8,"endColumn":53},{"ruleId":"110","severity":1,"message":"111","line":61,"column":18,"nodeType":"112","endLine":61,"endColumn":51},{"ruleId":"107","severity":1,"message":"108","line":80,"column":15,"nodeType":"109","endLine":80,"endColumn":40},{"ruleId":"107","severity":1,"message":"108","line":118,"column":7,"nodeType":"109","endLine":118,"endColumn":74},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Home' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Assignments to the 'imageSrc' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","CallExpression","no-global-assign","no-unsafe-negation"]